name: dbt CI/CD Pipeline

on:
  pull_request:
    branches: [ main]
  push:
    branches: [ main ]

env:
  # Tell dbt to read profiles.yml from the repo (.dbt folder) instead of ~/.dbt
  DBT_PROFILES_DIR: ${{ github.workspace }}/.dbt

jobs:
  # -------- PR validation against DEV environment (ephemeral schema) --------
  pr-validate-dev:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    environment: dev
    # All steps default to run inside the dbt project folder
    defaults:
      run:
        working-directory: dbt_instacart_demo

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13.7'

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry

      - name: Install dependencies
        run: poetry install --no-interaction --no-root

      # Map environment secrets â†’ env vars consumed by profiles.yml
      - name: Export Snowflake env vars (dev)
        env:
          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
          SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
          SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
        run: |
          echo "SNOWFLAKE_ACCOUNT=$SNOWFLAKE_ACCOUNT" >> $GITHUB_ENV
          echo "SNOWFLAKE_USER=$SNOWFLAKE_USER" >> $GITHUB_ENV
          echo "SNOWFLAKE_PASSWORD=$SNOWFLAKE_PASSWORD" >> $GITHUB_ENV
          echo "SNOWFLAKE_ROLE=$SNOWFLAKE_ROLE" >> $GITHUB_ENV
          echo "SNOWFLAKE_WAREHOUSE=$SNOWFLAKE_WAREHOUSE" >> $GITHUB_ENV
          echo "SNOWFLAKE_DATABASE=$SNOWFLAKE_DATABASE" >> $GITHUB_ENV

      # Ephemeral schema per PR/run so multiple PRs never collide
      - name: Choose ephemeral schema
        run: echo "DBT_SCHEMA=CI_PR_${{ github.event.number }}_${{ github.run_id }}" >> $GITHUB_ENV

      - name: dbt debug
        run: poetry run dbt debug --target dev

      - name: dbt deps
        run: poetry run dbt deps

      # Compile first so state-based selection has a state dir in target/
      - name: dbt compile (prepare state)
        run: poetry run dbt compile --target dev

      - name: dbt build (slim, only changed models)
        run: poetry run dbt build --target dev --select state:modified+ --defer --state target
      
      # - name: Drop ephemeral schema
      #   run: |
      #     poetry run dbt run-operation drop_schema --args "{schema_name: $DBT_SCHEMA}"

  # -------- Main branch build (TEST environment, full build) --------
  deploy-test:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: test

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13.7'

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry

      - name: Install dependencies
        run: poetry install --no-interaction --no-root

      - name: Set Snowflake env vars (test)
        run: |
          echo "SNOWFLAKE_ACCOUNT=${{ secrets.SNOWFLAKE_ACCOUNT }}" >> $GITHUB_ENV
          echo "SNOWFLAKE_USER=${{ secrets.SNOWFLAKE_USER }}" >> $GITHUB_ENV
          echo "SNOWFLAKE_PASSWORD=${{ secrets.SNOWFLAKE_PASSWORD }}" >> $GITHUB_ENV
          echo "SNOWFLAKE_ROLE=${{ secrets.SNOWFLAKE_ROLE }}" >> $GITHUB_ENV
          echo "SNOWFLAKE_WAREHOUSE=${{ secrets.SNOWFLAKE_WAREHOUSE }}" >> $GITHUB_ENV
          echo "SNOWFLAKE_DATABASE=${{ secrets.SNOWFLAKE_DATABASE }}" >> $GITHUB_ENV
          echo "DBT_SCHEMA=DBT_TEST" >> $GITHUB_ENV

      - name: dbt debug
        run: poetry run dbt debug --project-dir ./dbt_instacart_demo --target test

      - name: dbt deps
        run: poetry run dbt deps --project-dir ./dbt_instacart_demo --target test

      - name: dbt build (full)
        run: poetry run dbt build --project-dir ./dbt_instacart_demo --target test




